# -*- coding: utf-8 -*-
"""BargainLogic.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LhTiHw63DYKlMrxpOrViqhCcN99vV2dW
"""

# Import random/uniform, to generate random float within range
from random import uniform, random

# Takes 5% of value passed, to create range buffer
inputBuffer = lambda val: val % 5


# Negotiation logic
def bargainAmt(min, max, userAmt):
    print(min, max, userAmt)
    offerAmt = 0.0
    if userAmt >= min:
        incr = inputBuffer(userAmt) + userAmt
        if incr >= max:
            decr = max - inputBuffer(max)
            offerAmt = round(random.uniform(decr, max), 2)
        else:
            offerAmt = round(random.uniform(incr, max), 2)
    else:
        incr = inputBuffer(min) + min
        offerAmt = round(random.uniform(incr, max), 2)
    return offerAmt


# Method implementation

# Values to be passed
minOrderTotal = 100.99
maxOrderTotal = 500.99
userAmt = 100.99
# Call negotiation method
offerPrice = bargainAmt(minOrderTotal, maxOrderTotal, userAmt)
print(offerPrice)